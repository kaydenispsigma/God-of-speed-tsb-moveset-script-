local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- VanishingSpeed Tool
local Tool1 = Instance.new("Tool")
Tool1.Name = "VanishingSpeed"
Tool1.RequiresHandle = false
Tool1.Parent = player.Backpack

local movingConnection
local Anim

Tool1.Equipped:Connect(function()
    local AnimAnim = Instance.new("Animation")
    AnimAnim.AnimationId = "rbxassetid://18897115785"
    Anim = humanoid:LoadAnimation(AnimAnim)
    Anim.Looped = true  
    Anim:Play()
    
    humanoid.WalkSpeed = 50

    movingConnection = game:GetService("RunService").Heartbeat:Connect(function()
        local direction = rootPart.CFrame.LookVector * Vector3.new(1, 0, 1) -- Moves in the player's facing direction
        direction = direction.Unit
        rootPart.CFrame = rootPart.CFrame + (direction * 5) -- Moves forward by **5 studs continuously**
    end)
end)

Tool1.Unequipped:Connect(function()
    if movingConnection then
        movingConnection:Disconnect()
    end
    humanoid.WalkSpeed = 16
    if Anim then
        Anim:Stop()
    end
end)

-- NoMoreRunning Tool
local Tool2 = Instance.new("Tool")
Tool2.Name = "NoMoreRunning"
Tool2.RequiresHandle = false
Tool2.Parent = player.Backpack

Tool2.Equipped:Connect(function()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherCharacter = otherPlayer.Character
            local otherRootPart = otherCharacter:FindFirstChild("HumanoidRootPart")
            
            if otherRootPart then
                local distance = (rootPart.Position - otherRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    if closestPlayer and closestPlayer.Character then
        local closestCharacter = closestPlayer.Character
        local closestRootPart = closestCharacter:FindFirstChild("HumanoidRootPart")
        
        if closestRootPart then
            local behindPosition = closestRootPart.CFrame * CFrame.new(0, 0, 5)  
            rootPart.CFrame = behindPosition
        end
    end
end)
